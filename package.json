{
  "name": "ngneat-dag",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js",
    "nx": "nx",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "affected:deploy": "nx affected --target deploy",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "contributors:add": "all-contributors add",
    "hooks:pre-commit": "node hooks/pre-commit.js",
    "commit": "git-cz",
    "release:first": "npm run release -- --first-release",
    "build:lib": "nx build dag-manager-service --configuration production && npm run build:copy-readme",
    "build:copy-readme": "cp ./README.md ./dist/libs/dag-manager-service && cp ./logo.svg ./dist/libs/dag-manager-service && cp ./demo.gif ./dist/libs/dag-manager-service",
    "test:lib": "ng test @scope/dag",
    "release": "cd libs/dag-manager-service && standard-version --infile ../..CHANGELOG.md",
    "test:lib:headless": "cross-env CI=true npm run test:lib",
    "build:prod": "NODE_ENV=production ng build --configuration production",
    "workspace-generator": "nx workspace-generator"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "16.2.9",
    "@angular/common": "16.2.9",
    "@angular/compiler": "16.2.9",
    "@angular/core": "16.2.9",
    "@angular/forms": "16.2.9",
    "@angular/platform-browser": "16.2.9",
    "@angular/platform-browser-dynamic": "16.2.9",
    "@angular/router": "16.2.9",
    "@ngneat/lib": "^5.0.0",
    "leader-line": "^1.0.7",
    "rxjs": "7.8.0",
    "tailwindcss": "^3.1.8",
    "tslib": "^2.4.0",
    "zone.js": "0.13.3",
    "@nx/angular": "16.10.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "16.2.6",
    "@angular-devkit/core": "16.2.6",
    "@angular-devkit/schematics": "16.2.6",
    "@angular-eslint/eslint-plugin": "16.0.3",
    "@angular-eslint/eslint-plugin-template": "16.0.3",
    "@angular-eslint/template-parser": "16.0.3",
    "@angular/cli": "~16.2.0",
    "@angular/compiler-cli": "16.2.9",
    "@angular/language-service": "16.2.9",
    "@commitlint/cli": "17.1.2",
    "@commitlint/config-angular": "^17.1.0",
    "@commitlint/config-conventional": "^17.1.0",
    "@schematics/angular": "16.2.6",
    "@types/jest": "29.4.4",
    "@types/node": "^18.11.18",
    "@typescript-eslint/eslint-plugin": "5.40.0",
    "@typescript-eslint/parser": "5.40.0",
    "all-contributors-cli": "^6.24.0",
    "autoprefixer": "^10.4.12",
    "codelyzer": "6.0.2",
    "cross-env": "^7.0.3",
    "cypress": "^13.0.0",
    "dotenv": "16.0.3",
    "eslint": "8.25.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-cypress": "2.15.1",
    "git-cz": "^4.9.0",
    "husky": "^8.0.3",
    "injection-js": "^2.4.0",
    "jest": "29.4.3",
    "jest-environment-jsdom": "29.4.3",
    "jest-preset-angular": "13.1.2",
    "lint-staged": "^13.0.3",
    "ng-packagr": "16.2.3",
    "nx": "16.10.0",
    "postcss": "^8.4.18",
    "postcss-import": "^15.0.0",
    "postcss-loader": "^7.0.1",
    "postcss-preset-env": "^7.8.2",
    "postcss-scss": "^4.0.5",
    "postcss-url": "^10.1.3",
    "prettier": "2.7.1",
    "standard-version": "^9.5.0",
    "ts-jest": "29.1.1",
    "ts-node": "10.9.1",
    "typescript": "5.1.6",
    "nx-cloud": "latest",
    "@nx/workspace": "16.10.0",
    "@nx/eslint-plugin": "16.10.0",
    "@nx/cypress": "16.10.0",
    "@nx/jest": "16.10.0"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "lint-staged": {
    "*.{js,json,css,scss,ts,html,component.html}": [
      "prettier --write",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint $HUSKY_GIT_PARAMS",
      "pre-commit": "npm run hooks:pre-commit && lint-staged",
      "pre-push": ""
    }
  }
}
