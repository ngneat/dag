{
  "name": "ngneat-dag",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main",
    "nx": "nx",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "affected:deploy": "nx affected --target deploy",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "contributors:add": "all-contributors add",
    "hooks:pre-commit": "node hooks/pre-commit.js",
    "commit": "git-cz",
    "release:first": "npm run release -- --first-release",
    "build:lib": "nx build dag-manager-service --configuration production && npm run build:copy-readme",
    "build:copy-readme": "cp ./README.md ./dist/libs/dag-manager-service && cp ./logo.svg ./dist/libs/dag-manager-service && cp ./demo.gif ./dist/libs/dag-manager-service",
    "test:lib": "ng test @scope/dag",
    "release": "cd libs/dag-manager-service && standard-version --infile ../..CHANGELOG.md",
    "test:lib:headless": "cross-env CI=true npm run test:lib",
    "build:prod": "NODE_ENV=production ng build --configuration production",
    "workspace-generator": "nx workspace-generator"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "13.3.5",
    "@angular/common": "13.3.5",
    "@angular/compiler": "13.3.5",
    "@angular/core": "13.3.5",
    "@angular/forms": "13.3.5",
    "@angular/platform-browser": "13.3.5",
    "@angular/platform-browser-dynamic": "13.3.5",
    "@angular/router": "13.3.5",
    "@ngneat/lib": "^1.0.5",
    "@nrwl/angular": "14.0.5",
    "leader-line": "^1.0.5",
    "rxjs": "~6.5.5",
    "tslib": "^2.0.0",
    "zone.js": "0.11.5"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "13.3.4",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular-eslint/eslint-plugin-template": "13.0.1",
    "@angular-eslint/template-parser": "13.0.1",
    "@angular/cli": "13.3.4",
    "@angular/compiler-cli": "13.3.5",
    "@angular/language-service": "13.3.5",
    "@commitlint/cli": "8.1.0",
    "@commitlint/config-angular": "^8.1.0",
    "@commitlint/config-conventional": "^8.1.0",
    "@nrwl/cli": "14.0.5",
    "@nrwl/cypress": "14.0.5",
    "@nrwl/eslint-plugin-nx": "14.0.5",
    "@nrwl/jest": "14.0.5",
    "@nrwl/nx-cloud": "14.0.3",
    "@nrwl/workspace": "14.0.5",
    "@types/jest": "27.4.1",
    "@types/node": "14.14.33",
    "@typescript-eslint/eslint-plugin": "4.3.0",
    "@typescript-eslint/parser": "4.3.0",
    "all-contributors-cli": "^6.8.1",
    "autoprefixer": "^10.0.2",
    "codelyzer": "6.0.2",
    "cross-env": "^5.2.0",
    "cypress": "^4.1.0",
    "dotenv": "10.0.0",
    "eslint": "7.10.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.10.3",
    "git-cz": "^3.2.1",
    "husky": "^3.0.1",
    "jest": "27.5.1",
    "jest-environment-jsdom": "^27.5.1",
    "jest-preset-angular": "11.1.1",
    "lint-staged": "^9.2.0",
    "ng-packagr": "13.3.1",
    "nx": "14.0.5",
    "postcss": "^8.1.7",
    "postcss-import": "^13.0.0",
    "postcss-loader": "^4.0.4",
    "postcss-preset-env": "^6.7.0",
    "postcss-scss": "^3.0.4",
    "postcss-url": "^10.1.1",
    "prettier": "2.6.2",
    "standard-version": "^9.0.0",
    "tailwindcss": "^2.0.1",
    "ts-jest": "27.1.4",
    "ts-node": "9.1.1",
    "tslint": "6.1.3",
    "typescript": "4.6.4"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "lint-staged": {
    "*.{js,json,css,scss,ts,html,component.html}": [
      "prettier --write",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint $HUSKY_GIT_PARAMS",
      "pre-commit": "npm run hooks:pre-commit && lint-staged",
      "pre-push": ""
    }
  }
}
